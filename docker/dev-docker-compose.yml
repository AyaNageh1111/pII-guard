services:
  # UI
  local-ui:
    container_name: local-ui
    build:
      context: ../
      dockerfile: ./docker/ui-local.DockerFile
      args:
        VITE_PII_DETECTOR_API_ENDPOINT: ${VITE_PII_DETECTOR_API_ENDPOINT}
    links:
      - local-app
    depends_on:
      - local-app
    environment:
      - NODE_ENV=production
    env_file:
      - ./local.env
    restart: unless-stopped
    expose:
      - 80
    ports:
      - '3000:80'
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  # app
  local-app:
    container_name: local-app
    build:
      context: ../
      dockerfile: ./docker/api-local.DockerFile
    depends_on:
      - local-dev-postgres
      - local-dev-rabbitmq
      - local-dev-nginx
    links:
      - local-dev-postgres
      - local-dev-rabbitmq
      - local-dev-nginx
      - local-dev-pgadmin
      - local-dev-ollama-puller
      - local-dev-elasticsearch
      - local-dev-kibana
    env_file:
      - ./local.env
    expose:
      - 80
    ports:
      - '8888:80'
    volumes:
      - ../api:/app
    working_dir: /app
    restart: unless-stopped
    command: ["sleep", "infinity"]
  # Ollama Inference Workers
  local-dev-ollama1:
    image: ollama/ollama:latest
    container_name: local-dev-ollama1
    expose:
      - 11434
    volumes:
      - ./temp/local-dev/ollama_storage_1:/code
      - ./temp/local-dev/ollama_storage_1/ollama/ollama:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped

  local-dev-ollama-puller:
    image: curlimages/curl:latest
    container_name: local-dev-ollama-puller
    depends_on:
      - local-dev-ollama1
    env_file:
      - ./local.env
    entrypoint: >
      sh -c '
        env
        echo "Waiting for local-dev-ollama1...";
        until curl -s http://local-dev-ollama1:11434; do sleep 2; done;

        echo "Pulling $$LLM_MODEL on local-dev-ollama1...";
        curl -s http://local-dev-ollama1:11434/api/pull -H "Content-Type: application/json" -d "{\"name\": \"$$LLM_MODEL\"}";

        curl -s http://local-dev-ollama1:11434/api/generate -H "Content-Type: application/json" -d "{\"model\":\"$$LLM_MODEL\",\"prompt\":\"Hello\",\"stream\":false}" > /dev/null;
      '
    restart: 'no'
  # PostgreSQL (internal only)
  local-dev-postgres:
    image: postgres:15
    container_name: local-dev-postgres
    environment:
      POSTGRES_USER: ollama_user
      POSTGRES_PASSWORD: ollama_pass
    volumes:
      - ./temp/local-dev/pg/:/var/lib/postgresql/data
    restart: unless-stopped

  # pgAdmin Web UI (accessible from host)
  local-dev-pgadmin:
    container_name: local-dev-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    volumes:
      - ./local.configs/pgadmin-servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - local-dev-postgres
    restart: unless-stopped

  # RabbitMQ with UI (accessible from host)
  local-dev-rabbitmq:
    image: rabbitmq:3-management
    container_name: local-dev-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ollama
      RABBITMQ_DEFAULT_PASS: ollama
    expose:
      - 5672
      - 15672
    ports:
      - '5672:5672'
      - '15672:15672'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/api/healthchecks/node"]
      interval: 30s
      timeout: 10s
      retries: 5

  # NGINX Load Balancer (public endpoint for Ollama)
  local-dev-nginx:
    image: nginx:stable
    container_name: local-dev-ollama-nginx
    ports:
      - '8080:8080'
    volumes:
      - ./local.configs/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - local-dev-ollama1
    restart: unless-stopped

  local-dev-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: local-dev-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - ./temp/local-dev/elasticsearch:/usr/share/elasticsearch/data
    restart: unless-stopped
    expose:
      - '9200' # internal only

  local-dev-kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: local-dev-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://local-dev-elasticsearch:9200
      - xpack.security.enabled=false
    depends_on:
      - local-dev-elasticsearch
    ports:
      - '5601:5601'
    restart: unless-stopped
